@using Task6.Common;
@{
    Layout = "~/Pages/Layouts/_UsersLayout.cshtml";
    Page.Title = "Reward User";
    <h1 style="padding-left:20px">Reward User</h1>
    string errorMessage = null;
    int userId = 0;
    int awardId = 0;
    string status = null;
    if (IsPost)
    {
        if (!int.TryParse(Request["UserId"], out userId) || !int.TryParse(Request["AwardId"], out awardId))
        {
            errorMessage = "Incorrect values!";
        }
        else
        {
            errorMessage = null;
            var user = DependencyResolver.UserLogic.GetById(userId);
            var award = DependencyResolver.AwardLogic.GetById(awardId);
            if (DependencyResolver.UserLogic.GiveAward(user.Id, award))
            {
                status = "The award was successfully presented.";
            }
            else
            {
                status = "An error occurred during the presentation of award.";
            }
        }
    }
}
@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
@if (status != null)
{
    <div class="alert alert-info">@status</div>
}
<h3 style="padding-left:20px">All Users: </h3>
<ul class="list-group list-group-flush">
    @{
        var users = DependencyResolver.UserLogic.GetAll();
        if (!users.Any())
        {
            <li class="list-group-item">
                Users is empty.
            </li>
        }
        foreach (var user in users)
        {
            byte[] byteImageArray = DependencyResolver.UserLogic.GetUserImage(user.Id);
            <li class="list-group-item">
                @try
                {
                    WebImage photo = new WebImage(byteImageArray);
                    if (photo != null)
                    {
                        <img width="40" height="40" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(user.UserImage))">
                    }
                }
                catch
                {
                    <img src="https://www.retailx.com/wp-content/uploads/2019/12/iStock-476085198.jpg" width="100" height="100" alt="">
                }
                @{
                    @user.ToString()
                    var res = DependencyResolver.AwardLogic.GetAwardsByUserId(user.Id);
                    var str = " Awards: ";
                    var titles = "";
                    if (res.Any())
                    {
                        @str
                        foreach (var i in res)
                        {
                            titles = i.Title.ToString() + "; ";
                            @titles
                        }
                    }
                }
            </li>
        }
    }
</ul>
<h3 style="padding-left:20px">All Awards: </h3>
<ul class="list-group list-group-flush">
    @{
        var awards = DependencyResolver.AwardLogic.GetAll();
        if (!awards.Any())
        {
            <li class="list-group-item">
                Awards is empty.
            </li>
        }
        foreach (var award in awards)
        {
            <li class="list-group-item">
                <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(award.AwardImage))">
                @award.ToString()
            </li>
        }
    }
</ul>
<form action="~/Pages/Users/RewardUser.cshtml" method="post" style="padding-left:20px">
    <div>
        <label>Select the user ID which you want to give an award: </label>
        <input class="form-control" style="width:200px" type="text" name="UserID" id="UserID" pattern="^[0-9]*$" required/>
    </div>
    <br />
    <div>
        <label>Select the award ID that you whant to give: </label>
        <input class="form-control" style="width:200px" type="text" name="AwardId" id="AwardId" pattern="^[0-9]*$" required/>
    </div>
    <br />
    <button class="btn btn-primary" style="width:200px">Submit</button>
</form>