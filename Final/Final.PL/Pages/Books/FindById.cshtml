@using Final.Ioc;
@using Final.Logger;
@{
    Page.Title = "Find Book By Id";
    Layout = "~/Layouts/_MainLayout.cshtml";
    var logger = Logger.Log;
    int id = 0;
}
<h1 style="padding-left:20px">Find Book By Id</h1>
<div class="main" style="padding-left:20px">
    <form action="~/Pages/Books/FindById.cshtml" method="post">
        <div>
            <label>Id: </label>
            <input class="form-control" style="width:100px" type="text" name="Id" id="Id" pattern="^[0-9]*$" required />
        </div>
        <br />
        <button class="btn btn-primary" style="width:100px">Find</button>
    </form>
</div>
<br />
<br />
@if (IsPost)
{
    if (!int.TryParse(Request["Id"], out id))
    {
        logger.Error("Invalid input format.");
    }
    else
    {
        try
        {
            var book = DependencyResolver.BookLogic.GetById(id);
            <table>
                <tr>
                    <td rowspan="7" class="first">
                        <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(book.BookImage))">
                    </td>
                    <td>Id:</td>
                    <td>@book.Id.ToString()</td>
                    <td>
                        @if (book.Count > 0)
                        {
                            <b style="font-size:large">
                                @if (User.IsInRole("Admin") || User.IsInRole("User"))
                                {
                                    <button id="btn_buy" class="btn btn-success" style="position:center"
                                            onclick="location.href='/Pages/Purchases/CreatePurchaseByParam'">
                                        Buy
                                    </button>
                                }
                                else
                                {
                                    <a href="~/Pages/Auth/Login.cshtml" style="color:black">
                                        Buy
                                    </a>
                                }
                            </b>
                        }
                        else
                        {
                            <b style="font-size:large">
                                Out of product
                            </b>
                        }
                    </td>
                </tr>
                <tr>
                    <td>Author:</td>
                    <td>@book.Author.ToString()</td>
                </tr>
                <tr>
                    <td>Title:</td>
                    <td>@book.Title.ToString()</td>
                </tr>
                <tr>
                    <td>Genre:</td>
                    <td>@book.Genre.ToString()</td>
                </tr>
                <tr>
                    <td>Release date:</td>
                    <td>@book.ReleaseDate.ToString()</td>
                </tr>
                <tr>
                    <td>Price:</td>
                    <td>@book.Price.ToString()</td>
                </tr>
                <tr>
                    <td>Quantity:</td>
                    <td>@book.Count.ToString()</td>
                </tr>
            </table>
        }
        catch (Exception ex)
        {
            logger.Error(ex.Message);
            Response.Redirect("~/404.cshtml");
        }
    }
}
<link href="~/Styles/BooksStyles.css" rel="stylesheet" />